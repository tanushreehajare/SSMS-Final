"""
Django settings for stationarymanagement project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from django.contrib.messages import constants as messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-k_!^y%%%aw%@2r_=uc_0erbkfdi&h2slxm8t^dhs7vtyhjlz5k'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'stationaryapp.apps.stationaryappConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.auth.tokens',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.sites",
    'gmailapi_backend',
    'social_django',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'stationarymanagement.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',

            ],
        },
    },
]

WSGI_APPLICATION = 'stationarymanagement.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'stationary_management',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',  # or the hostname where your MySQL server is running
        'PORT': '3306',      # or the port on which your MySQL server is listening
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Or any other session engine you prefer
SESSION_COOKIE_SECURE = False  # If using HTTPS
SESSION_COOKIE_HTTPONLY = False
# Disable SSL redirection
SECURE_SSL_REDIRECT = False
USE_HTTPS = False
# Disable HTTPS check
SECURE_PROXY_SSL_HEADER = None
CSRF_COOKIE_SECURE = False # Make sure this is set correctly based on your development environment
CSRF_COOKIE_HTTPONLY = False  # Make sure this is set correctly based on your requirements

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# settings.py
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py

AUTH_USER_MODEL = 'stationaryapp.CustomUser'
  # Replace 'your_app_name' with your app name

AUTHENTICATION_BACKENDS = [
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
]


SITE_ID = 1


LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
LOGIN_REDIRECT_URL = 'custom_login_redirect' #?
LOGOUT_REDIRECT_URL = 'login'

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '1063867891353-vja3434c26ndv7tbircc2p6dpt7p95dq.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'
SOCIAL_AUTH_GOOGLE_OAUTH2_CALLBACK_URL = 'http://127.0.0.1:8000/custom_login_redirect/'

import os

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  
EMAIL_HOST = 'smtp.gmail.com'   
EMAIL_PORT = 587
EMAIL_HOST_USER = 'tanushree.h@somaiya.edu' 
EMAIL_HOST_PASSWORD = 'uiqvrdblnqbyuldr'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
#EMAIL_HOST = 'smtpout.secureserver.net'
#EMAIL_PORT = 587  # Use 465 for SSL if preferred
#EMAIL_USE_TLS = True  # Use False if you switch to SSL
#EMAIL_USE_SSL = False  # Set to True if you use SSL
#EMAIL_HOST_USER = 'stationary@kjsieit.in'  # Your GoDaddy email address
#EMAIL_HOST_PASSWORD = 'Kjsieit@2022'  # Your GoDaddy email password
#DEFAULT_FROM_EMAIL = 'stationary@kjsieit.in'

import logging
logging.getLogger('django.request').propagate = False

MEDIA_URL = '/images/'

MEDIA_ROOT =  os.path.join(BASE_DIR, 'media')